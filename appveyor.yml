branches:
 only:
 - master
 - devel
 - /^[0-9]+\.[0-9]+\.[0-9]+[.0-9ab]*$/

environment:
  global:

      # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
      # /E:ON and /V:ON options are not enabled in the batch script intepreter
      # See: http://stackoverflow.com/a/13751649/163740
      CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
      SWIG_VERSION: "3.0.12"

  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.

    - PYTHON: "C:\\Python27.10"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.10-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "64"

    # Python versions not pre-installed

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "64"

  password:
    secure: fAEJDjlDCADoXUIYv64Ufdvta6dvRrj2c6NIgObi3No=

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  - "powershell appveyor\\install.ps1"

  # Use newer version of swig
  - "7z x appveyor\\swigwin-%SWIG_VERSION%.zip"
  - "SET PATH=swigwin-%SWIG_VERSION%;%PATH%"

  - "%PYTHON%/python -m pip install pip setuptools>=34.0 nose twine wheel --upgrade"
  - "%CMD_IN_ENV% %PYTHON%/python appveyor/build_glpk.py"
  - "%CMD_IN_ENV% python setup.py install"

build: off

test_script:
  - "mkdir testdir"
  - "copy test_swiglpk.py testdir\\test_swiglpk.py"
  - "dir"
  - "cd testdir"
  - "dir"
  - "%PYTHON%\\python -m nose -v"
  - "cd .."
  - "dir"

after_test:
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - ps: "ls dist"

artifacts:
  - path: dist\*

deploy_script:
  - ps: >-
      if($env:appveyor_repo_tag -eq 'True') {
          Invoke-Expression "$env:PYTHON/Scripts/twine upload dist/* --username Nikolaus.Sonnenschein --password $env:password"
      }
